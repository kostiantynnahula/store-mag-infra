services:
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080" # Port for accessing Kafka UI
    environment:
      # Name for the Kafka cluster in Kafka UI
      KAFKA_CLUSTERS_0_NAME: "local"

      # Bootstrap servers for your Kafka cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"

      # (Optional) Specify security protocol if needed (PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL)
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"

      # (Optional) Enable monitoring additional properties (e.g., consumer groups, schema registry)
      # Uncomment and configure as needed
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://schema-registry:8081"

    depends_on:
      - kafka
    networks:
      - store-common-network
  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: always
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    networks:
      - store-common-network

  postgres:
    container_name: store-mag-postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - store-common-network

volumes:
  postgres:

networks:
  store-common-network:
    driver: bridge
    name: store-common-network
